{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:647:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "69:79:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "79:22:1",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "94:6:1"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "88:5:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "88:13:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "79:5:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "136:5:1"
													}
												],
												"functionName": {
													"name": "validator_revert_t_int256",
													"nodeType": "YulIdentifier",
													"src": "110:25:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "110:32:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "110:32:1"
										}
									]
								},
								"name": "abi_decode_t_int256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "47:6:1",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "55:3:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "63:5:1",
										"type": ""
									}
								],
								"src": "7:141:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "230:206:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "276:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "285:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "288:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "278:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "278:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "278:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "251:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "260:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "247:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "247:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "272:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "243:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "243:32:1"
											},
											"nodeType": "YulIf",
											"src": "240:2:1"
										},
										{
											"nodeType": "YulBlock",
											"src": "302:127:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "317:15:1",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "331:1:1",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "321:6:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "346:73:1",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "391:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "387:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:22:1"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "411:7:1"
															}
														],
														"functionName": {
															"name": "abi_decode_t_int256_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "356:30:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "356:63:1"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "346:6:1"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_int256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "200:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "211:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "223:6:1",
										"type": ""
									}
								],
								"src": "154:282:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "486:32:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "496:16:1",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "507:5:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "496:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_int256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "468:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "478:7:1",
										"type": ""
									}
								],
								"src": "442:76:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "566:78:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "622:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "631:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "634:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "624:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "624:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "624:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "589:5:1"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "596:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:23:1"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "586:2:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "586:34:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "579:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "579:42:1"
											},
											"nodeType": "YulIf",
											"src": "576:2:1"
										}
									]
								},
								"name": "validator_revert_t_int256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "559:5:1",
										"type": ""
									}
								],
								"src": "524:120:1"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "60806040526040516100109061011f565b604051809103906000f08015801561002c573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a951609c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100d257600080fd5b505afa1580156100e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010a9190610141565b60015534801561011957600080fd5b5061018b565b6101c18061031383390190565b60008151905061013b81610174565b92915050565b60006020828403121561015357600080fd5b60006101618482850161012c565b91505092915050565b6000819050919050565b61017d8161016a565b811461018857600080fd5b50565b6101798061019a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063605b85ad1461003b578063ece57b0414610059575b600080fd5b610043610077565b60405161005091906100bf565b60405180910390f35b61006161009b565b60405161006e91906100da565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6100aa8161011f565b82525050565b6100b9816100f5565b82525050565b60006020820190506100d460008301846100a1565b92915050565b60006020820190506100ef60008301846100b0565b92915050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061012a82610131565b9050919050565b600061013c826100ff565b905091905056fea264697066735822122087d82e607c3efcd00557706f454a5b62c5c4c99700a2c551a5288f033f4b86d664736f6c634300080400336080604052600a600055601460015534801561001a57600080fd5b506101978061002a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630b7f16651461005c5780630c55699c1461007a578063a951609c14610098578063de59b374146100b6578063f9a329bc146100d4575b600080fd5b6100646100f2565b604051610071919061013c565b60405180910390f35b6100826100fc565b60405161008f919061013c565b60405180910390f35b6100a0610102565b6040516100ad919061013c565b60405180910390f35b6100be61010b565b6040516100cb919061013c565b60405180910390f35b6100dc61011a565b6040516100e9919061013c565b60405180910390f35b6000600154905090565b60005481565b60008054905090565b6000610115610124565b905090565b6000808091505090565b60008054905090565b61013681610157565b82525050565b6000602082019050610151600083018461012d565b92915050565b600081905091905056fea26469706673582212202d10aea07fbfc58275c39e6c5b5005722df024e6e81fb15a0bc9810946b9186464736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x10 SWAP1 PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA951609C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x141 JUMP JUMPDEST PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B JUMP JUMPDEST PUSH2 0x1C1 DUP1 PUSH2 0x313 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13B DUP2 PUSH2 0x174 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x161 DUP5 DUP3 DUP6 ADD PUSH2 0x12C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D DUP2 PUSH2 0x16A JUMP JUMPDEST DUP2 EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x179 DUP1 PUSH2 0x19A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x605B85AD EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xECE57B04 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAA DUP2 PUSH2 0x11F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0xF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP3 PUSH2 0x131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C DUP3 PUSH2 0xFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD8 0x2E PUSH1 0x7C RETURNDATACOPY 0xFC 0xD0 SDIV JUMPI PUSH17 0x6F454A5B62C5C4C99700A2C551A5288F03 EXTCODEHASH 0x4B DUP7 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x0 SSTORE PUSH1 0x14 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 DUP1 PUSH2 0x2A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB7F1665 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0xC55699C EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xA951609C EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xDE59B374 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF9A329BC EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0xFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x10B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x11A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115 PUSH2 0x124 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x136 DUP2 PUSH2 0x157 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D LT 0xAE LOG0 PUSH32 0xBFC58275C39E6C5B5005722DF024E6E81FB15A0BC9810946B9186464736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
			"sourceMap": "2258:231:0:-:0;;;2296:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2274:29;;;;;;;;;;;;;;;;;;;;2386:10;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2370:42;;2258:231;;;;;;;;;;;;;;;;;;;;:::o;7:141:1:-;63:5;94:6;88:13;79:22;;110:32;136:5;110:32;:::i;:::-;69:79;;;;:::o;154:282::-;223:6;272:2;260:9;251:7;247:23;243:32;240:2;;;288:1;285;278:12;240:2;331:1;356:63;411:7;402:6;391:9;387:22;356:63;:::i;:::-;346:73;;302:127;230:206;;;;:::o;442:76::-;478:7;507:5;496:16;;486:32;;;:::o;524:120::-;596:23;613:5;596:23;:::i;:::-;589:5;586:34;576:2;;634:1;631;624:12;576:2;566:78;:::o;2258:231:0:-;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1235:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "80:74:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "97:3:1"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "141:5:1"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_A_$61_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "102:38:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "102:45:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "90:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "90:58:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "90:58:1"
										}
									]
								},
								"name": "abi_encode_t_contract$_A_$61_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "68:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "75:3:1",
										"type": ""
									}
								],
								"src": "7:147:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "223:52:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "240:3:1"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "262:5:1"
															}
														],
														"functionName": {
															"name": "cleanup_t_int256",
															"nodeType": "YulIdentifier",
															"src": "245:16:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "245:23:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "233:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "233:36:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "233:36:1"
										}
									]
								},
								"name": "abi_encode_t_int256_to_t_int256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "211:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "218:3:1",
										"type": ""
									}
								],
								"src": "160:115:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "387:132:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "397:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "409:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "420:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "405:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "405:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "397:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "485:6:1"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "498:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "509:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "494:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "494:17:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_A_$61_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "433:51:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "433:79:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "433:79:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_A_$61__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "359:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "371:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "382:4:1",
										"type": ""
									}
								],
								"src": "281:238:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "621:122:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "631:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "643:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "654:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "639:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "639:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "631:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "709:6:1"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "722:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "733:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "718:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "718:17:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_int256_to_t_int256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "667:41:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "667:69:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "667:69:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "593:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "605:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "616:4:1",
										"type": ""
									}
								],
								"src": "525:218:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "793:32:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "803:16:1",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "814:5:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "803:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_int256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "775:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "785:7:1",
										"type": ""
									}
								],
								"src": "749:76:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "876:81:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "886:65:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "901:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "908:42:1",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "897:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "897:54:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "886:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "858:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "868:7:1",
										"type": ""
									}
								],
								"src": "831:126:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1031:74:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1041:58:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1093:5:1"
													}
												],
												"functionName": {
													"name": "convert_t_contract$_A_$61_to_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "1054:38:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1054:45:1"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "1041:9:1"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_A_$61_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1011:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "1021:9:1",
										"type": ""
									}
								],
								"src": "963:142:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1179:53:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1189:37:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1220:5:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "1202:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1202:24:1"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "1189:9:1"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_A_$61_to_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1159:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "1169:9:1",
										"type": ""
									}
								],
								"src": "1111:121:1"
							}
						]
					},
					"contents": "{\n\n    function abi_encode_t_contract$_A_$61_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_A_$61_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_A_$61__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_A_$61_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_A_$61_to_t_address(value) -> converted {\n        converted := convert_t_contract$_A_$61_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_A_$61_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063605b85ad1461003b578063ece57b0414610059575b600080fd5b610043610077565b60405161005091906100bf565b60405180910390f35b61006161009b565b60405161006e91906100da565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6100aa8161011f565b82525050565b6100b9816100f5565b82525050565b60006020820190506100d460008301846100a1565b92915050565b60006020820190506100ef60008301846100b0565b92915050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061012a82610131565b9050919050565b600061013c826100ff565b905091905056fea264697066735822122087d82e607c3efcd00557706f454a5b62c5c4c99700a2c551a5288f033f4b86d664736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x605B85AD EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xECE57B04 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAA DUP2 PUSH2 0x11F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0xF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP3 PUSH2 0x131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C DUP3 PUSH2 0xFF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD8 0x2E PUSH1 0x7C RETURNDATACOPY 0xFC 0xD0 SDIV JUMPI PUSH17 0x6F454A5B62C5C4C99700A2C551A5288F03 EXTCODEHASH 0x4B DUP7 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
			"sourceMap": "2258:231:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2274:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2370:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2274:29;;;;;;;;;;;;:::o;2370:42::-;;;;:::o;7:147:1:-;102:45;141:5;102:45;:::i;:::-;97:3;90:58;80:74;;:::o;160:115::-;245:23;262:5;245:23;:::i;:::-;240:3;233:36;223:52;;:::o;281:238::-;382:4;420:2;409:9;405:18;397:26;;433:79;509:1;498:9;494:17;485:6;433:79;:::i;:::-;387:132;;;;:::o;525:218::-;616:4;654:2;643:9;639:18;631:26;;667:69;733:1;722:9;718:17;709:6;667:69;:::i;:::-;621:122;;;;:::o;749:76::-;785:7;814:5;803:16;;793:32;;;:::o;831:126::-;868:7;908:42;901:5;897:54;886:65;;876:81;;;:::o;963:142::-;1021:9;1054:45;1093:5;1054:45;:::i;:::-;1041:58;;1031:74;;;:::o;1111:121::-;1169:9;1202:24;1220:5;1202:24;:::i;:::-;1189:37;;1179:53;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "75400",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"contract_a()": "1232",
				"xx()": "1129"
			}
		},
		"methodIdentifiers": {
			"contract_a()": "605b85ad",
			"xx()": "ece57b04"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "contract_a",
			"outputs": [
				{
					"internalType": "contract A",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "xx",
			"outputs": [
				{
					"internalType": "int256",
					"name": "",
					"type": "int256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}